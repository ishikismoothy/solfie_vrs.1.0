// src/assets/styles/_mixins.scss
// Reusable mixins for the entire application

// ===================================
// Layout Mixins
// ===================================

// Flexbox
@mixin flex($justify: center, $align: center, $gap: 0, $direction: row) {
  display: flex;
  justify-content: $justify;
  align-items: $align;
  gap: $gap;
  flex-direction: $direction;
}

// Grid
@mixin grid($columns: 1, $gap: $spacing-md) {
  display: grid;
  grid-template-columns: repeat($columns, 1fr);
  gap: $gap;
}

// Center element
@mixin center($position: absolute) {
  position: $position;
  top: 50%;
  left: 50%;
  transform: translate(-50%, -50%);
}

// Container
@mixin container($max-width: $container-xl, $padding: $spacing-md) {
  width: 100%;
  max-width: $max-width;
  margin: 0 auto;
  padding: 0 $padding;
}

// ===================================
// Typography Mixins
// ===================================

// Text truncate
@mixin text-truncate() {
  overflow: hidden;
  text-overflow: ellipsis;
  white-space: nowrap;
}

// Line clamp
@mixin line-clamp($lines: 2) {
  display: -webkit-box;
  -webkit-line-clamp: $lines;
  -webkit-box-orient: vertical;
  overflow: hidden;
}

// Font smoothing
@mixin font-smoothing() {
  -webkit-font-smoothing: antialiased;
  -moz-osx-font-smoothing: grayscale;
}

// Heading styles
@mixin heading($size: $font-size-2xl, $weight: $font-weight-bold, $line-height: $line-height-tight) {
  font-size: $size;
  font-weight: $weight;
  line-height: $line-height;
  @include font-smoothing();
}

// ===================================
// Transition & Animation Mixins
// ===================================

// Transition
@mixin transition($properties: all, $duration: $transition-base, $easing: $transition-ease, $delay: 0ms) {
  transition: $properties $duration $easing $delay;
}

// Transform
@mixin transform($transforms) {
  transform: $transforms;
  -webkit-transform: $transforms;
  -ms-transform: $transforms;
}

// Animation
@mixin animation($name, $duration: $animation-duration-base, $timing: ease, $delay: 0s, $iteration: 1, $direction: normal, $fill-mode: forwards) {
  animation: $name $duration $timing $delay $iteration $direction $fill-mode;
  -webkit-animation: $name $duration $timing $delay $iteration $direction $fill-mode;
}

// Keyframes
@mixin keyframes($name) {
  @keyframes #{$name} {
    @content;
  }
  @-webkit-keyframes #{$name} {
    @content;
  }
}

// ===================================
// Visual Effect Mixins
// ===================================

// Box shadow
@mixin box-shadow($shadow: $shadow-base) {
  box-shadow: $shadow;
  -webkit-box-shadow: $shadow;
}

// Gradient
@mixin gradient($gradient: $gradient-primary) {
  background: $gradient;
  background-image: $gradient;
}

// Blur backdrop
@mixin backdrop-blur($amount: 10px) {
  backdrop-filter: blur($amount);
  -webkit-backdrop-filter: blur($amount);
}

// Glass morphism
@mixin glassmorphism($blur: 10px, $bg-opacity: 0.7) {
  background: rgba($background-white, $bg-opacity);
  @include backdrop-blur($blur);
  border: 1px solid rgba($border-color, 0.2);
}

// Pulse glow effect - Creates a glowing aura on hover
@mixin pulse-glow($color: $primary-color, $blur: 15px) {
  &::after {
    content: '';
    position: absolute;
    top: -2px;
    left: -2px;
    right: -2px;
    bottom: -2px;
    background: $color;
    border-radius: inherit;
    opacity: 0;
    z-index: -1;
    filter: blur($blur);
    @include transition(opacity, 0.4s);
  }
  
  &:hover::after {
    opacity: 0.3;
  }
}

// Shine effect - Creates an animated shine that sweeps across on hover
@mixin shine-effect($color: rgba(255, 255, 255, 0.3)) {
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: 0;
    left: -100%;
    width: 100%;
    height: 100%;
    background: linear-gradient(
      90deg,
      transparent,
      $color,
      transparent
    );
    @include transition(left, 0.5s);
  }
  
  &:hover::before {
    left: 100%;
  }
}

// Card lift effect - Lifts element on hover with shadow
@mixin card-lift($y: -4px, $shadow-hover: 0 12px 40px rgba(0, 0, 0, 0.15)) {
  @include transition(all, 0.4s, cubic-bezier(0.175, 0.885, 0.32, 1.275));
  
  &:hover {
    transform: translateY($y);
    @include box-shadow($shadow-hover);
  }
}

// ===================================
// Interactive Element Mixins
// ===================================

// Button base
@mixin button-base() {
  display: inline-flex;
  align-items: center;
  justify-content: center;
  padding: $button-padding-y $button-padding-x;
  font-weight: $font-weight-medium;
  border: none;
  border-radius: $radius-md;
  cursor: pointer;
  @include transition();
  @include font-smoothing();
  
  &:disabled {
    cursor: not-allowed;
    opacity: 0.6;
  }
}

// Button hover effect
@mixin button-hover-effect($bg-color: $primary-hover, $transform-y: -2px) {
  @media (hover: hover) {
    &:hover:not(:disabled) {
      background-color: $bg-color;
      transform: translateY($transform-y);
      @include box-shadow(0 5px 15px rgba($primary-color, 0.3));
    }
  }
  
  &:active:not(:disabled) {
    transform: translateY(0);
    @include box-shadow(0 2px 5px rgba($primary-color, 0.2));
  }
}

// Input base
@mixin input-base() {
  width: 100%;
  padding: $input-padding-y $input-padding-x;
  font-size: $font-size-base;
  font-family: $font-family-base;
  border: 2px solid $input-border;
  border-radius: $radius-md;
  background-color: $input-bg;
  color: $text-color;
  outline: none;
  @include transition();
  
  &::placeholder {
    color: $input-placeholder;
  }
  
  &:hover {
    background-color: $input-bg-hover;
    border-color: $input-border-hover;
  }
  
  &:focus {
    background-color: $background-white;
    border-color: $input-border-focus;
    @include box-shadow(0 0 0 3px $primary-light);
  }
}

// Ripple effect
@mixin ripple-effect($color: rgba(255, 255, 255, 0.3)) {
  position: relative;
  overflow: hidden;
  
  &::before {
    content: '';
    position: absolute;
    top: 50%;
    left: 50%;
    width: 0;
    height: 0;
    border-radius: 50%;
    background: $color;
    transform: translate(-50%, -50%);
    transition: width 0.6s ease, height 0.6s ease;
  }
  
  &:hover::before {
    width: 300px;
    height: 300px;
  }
}

// ===================================
// Responsive Mixins
// ===================================

// Media query - min-width
@mixin media-up($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (min-width: map-get($breakpoints, $breakpoint)) {
      @content;
    }
  } @else {
    @media (min-width: $breakpoint) {
      @content;
    }
  }
}

// Media query - max-width
@mixin media-down($breakpoint) {
  @if map-has-key($breakpoints, $breakpoint) {
    @media (max-width: #{map-get($breakpoints, $breakpoint) - 1px}) {
      @content;
    }
  } @else {
    @media (max-width: #{$breakpoint - 1px}) {
      @content;
    }
  }
}

// Media query - between
@mixin media-between($min, $max) {
  @if map-has-key($breakpoints, $min) and map-has-key($breakpoints, $max) {
    @media (min-width: map-get($breakpoints, $min)) and (max-width: #{map-get($breakpoints, $max) - 1px}) {
      @content;
    }
  }
}

// Hover media query (for touch devices)
@mixin hover() {
  @media (hover: hover) and (pointer: fine) {
    &:hover {
      @content;
    }
  }
}

// ===================================
// Utility Mixins
// ===================================

// Clearfix
@mixin clearfix() {
  &::after {
    content: '';
    display: table;
    clear: both;
  }
}

// Visually hidden (but accessible)
@mixin visually-hidden() {
  position: absolute;
  width: 1px;
  height: 1px;
  padding: 0;
  margin: -1px;
  overflow: hidden;
  clip: rect(0, 0, 0, 0);
  white-space: nowrap;
  border: 0;
}

// Reset button styles
@mixin reset-button() {
  padding: 0;
  border: none;
  background: none;
  font: inherit;
  color: inherit;
  cursor: pointer;
  outline: none;
}

// Aspect ratio
@mixin aspect-ratio($width: 16, $height: 9) {
  position: relative;
  
  &::before {
    content: '';
    display: block;
    padding-bottom: percentage($height / $width);
  }
  
  > * {
    position: absolute;
    top: 0;
    left: 0;
    width: 100%;
    height: 100%;
  }
}

// Scrollbar styles
@mixin custom-scrollbar($thumb-color: $primary-color, $track-color: $background-light, $width: 8px) {
  &::-webkit-scrollbar {
    width: $width;
    height: $width;
  }
  
  &::-webkit-scrollbar-track {
    background: $track-color;
    border-radius: $radius-full;
  }
  
  &::-webkit-scrollbar-thumb {
    background: $thumb-color;
    border-radius: $radius-full;
    
    &:hover {
      background: darken($thumb-color, 10%);
    }
  }
}